syntax = "proto3";

package core.user.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

// AuthService handles authentication related operations
service AuthService {
    // Login authenticates a user with email and password
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/auth/login"
            body: "*"
        };
    }

    // Logout invalidates the current session
    rpc Logout(LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/v1/auth/logout"
            body: "*"
        };
    }
}

// LoginRequest contains credentials for authentication
message LoginRequest {
    string email = 1 [(google.api.field_behavior) = REQUIRED];
    string password = 2 [(google.api.field_behavior) = REQUIRED];
}

// LoginResponse is empty since we only use status codes
//
// Response status codes:
// - OK (0): Successfully logged in
// - UNAUTHENTICATED (16): Invalid credentials
// - NOT_FOUND (5): User not found
// - INTERNAL (13): Server error
message LoginResponse {
    // access token to be used for protected endpoints
    string access_token = 1;
}

// LogoutRequest is used to logout a user
message LogoutRequest {}

// LogoutResponse is empty since we only use status codes
//
// Response status codes:
// - OK (0): Successfully logged out
// - UNAUTHENTICATED (16): Invalid or missing token
// - INTERNAL (13): Server error
message LogoutResponse {} 