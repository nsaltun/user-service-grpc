syntax = "proto3";

package core.user.v1;

import "core/user/v1/user.proto";
import "shared/types/v1/request_params.proto";
import "shared/types/v1/response_params.proto";


service UserAPI {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUserById(UpdateUserByIdRequest) returns (UpdateUserByIdResponse);
  rpc DeleteUserById(DeleteUserByIdRequest) returns (DeleteUserByIdResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

message CreateUserRequest {
  core.user.v1.User user = 1;
}

message CreateUserResponse {
  core.user.v1.User user=1;
}

message UpdateUserByIdRequest{
  //user id to be updated
  string id=1;
  //user object that conveys user payload to be updated
  core.user.v1.User user=2;
}

message UpdateUserByIdResponse{
  //updated user info
  core.user.v1.User user=1;
}

message DeleteUserByIdRequest{
  // user id to be deleted
  string id=1;
}

message DeleteUserByIdResponse{}

message ListUsersRequest{
  //pagination props
  shared.types.v1.List params=1;

  //Filter props
  core.user.v1.UserFilter filter=2;
}

message ListUsersResponse{
  //pagination props for response
  shared.types.v1.Pagination params=1;

  //Filter props
  repeated core.user.v1.User filter=2;
}